"use strict";(self.webpackChunktexter_docs=self.webpackChunktexter_docs||[]).push([[165],{1171:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"YAML/Types/Notify/Notify","title":"Notify","description":"What does it do?","source":"@site/docs/YAML/Types/Notify/Notify.md","sourceDirName":"YAML/Types/Notify","slug":"/YAML/Types/Notify/","permalink":"/texterdocs/docs/YAML/Types/Notify/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/YAML/Types/Notify/Notify.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Switch Node","permalink":"/texterdocs/docs/YAML/Types/Func/System/Switch Node"},"next":{"title":"Send media","permalink":"/texterdocs/docs/YAML/Types/Notify/Send Media"}}');var o=t(4848),i=t(8453);const r={},a="Notify",d={},c=[{value:"What does it do?",id:"what-does-it-do",level:3},{value:"1. Syntax",id:"1-syntax",level:2},{value:"required params",id:"required-params",level:3},{value:"optional params",id:"optional-params",level:3},{value:"2. Example",id:"2-example",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"notify",children:"Notify"})}),"\n",(0,o.jsx)(n.h3,{id:"what-does-it-do",children:"What does it do?"}),"\n",(0,o.jsx)(n.p,{children:"Sends a message to user without waiting for an answer."}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"1-syntax",children:"1. Syntax"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'<node_name>:\n  type: notify\n  messages:\n    - "<message>"\n  on_complete: <next_function>\n'})}),"\n",(0,o.jsx)(n.h3,{id:"required-params",children:"required params"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"type"})," type of the node"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"messages"})," list of messages to send in a single message block"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"on_complete"})," next function to do after complete (can be either a node or a function)"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"optional-params",children:"optional params"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"media"})," a link to file in firebase of an image"]}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"2-example",children:"2. Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'send_message:\n  type: notify\n  messages:\n    - "a message for the user"\n  on_complete: handoff\n'})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var s=t(6540);const o={},i=s.createContext(o);function r(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);