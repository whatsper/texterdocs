"use strict";(self.webpackChunktexter_docs=self.webpackChunktexter_docs||[]).push([[736],{8453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>c});var r=t(6540);const o={},s=r.createContext(o);function d(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),r.createElement(s.Provider,{value:n},e.children)}},8556:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>u,frontMatter:()=>d,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"Types/Func/System/Keyword Route","title":"Keyword Route","description":"What does it do?","source":"@site/docs/Types/Func/System/Keyword Route.md","sourceDirName":"Types/Func/System","slug":"/Types/Func/System/Keyword Route","permalink":"/texterdocs/docs/Types/Func/System/Keyword Route","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Types/Func/System/Keyword Route.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Check Working Hours","permalink":"/texterdocs/docs/Types/Func/System/Check Working Hours"},"next":{"title":"Parse Crm Data","permalink":"/texterdocs/docs/Types/Func/System/Parse Crm Data"}}');var o=t(4848),s=t(8453);const d={},c="Keyword Route",i={},a=[{value:"What does it do?",id:"what-does-it-do",level:3},{value:"1. Syntax",id:"1-syntax",level:2},{value:"required params",id:"required-params",level:3},{value:"optional params",id:"optional-params",level:3},{value:"2. Example",id:"2-example",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"keyword-route",children:"Keyword Route"})}),"\n",(0,o.jsx)(n.h3,{id:"what-does-it-do",children:"What does it do?"}),"\n",(0,o.jsx)(n.p,{children:"Routed between nodes based on user entered text."}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"1-syntax",children:"1. Syntax"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"<node_name>:\n  type: func\n  func_type: system\n  func_id: keywordsRoute\n  params:\n    <node_1>: <word_A>|<word_B>|<word_C>\n    <node_2>: <word_D>|<word_E>\n  on_complete: <next_function>\n"})}),"\n",(0,o.jsx)(n.h3,{id:"required-params",children:"required params"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"type"})," type of the node"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"func_type"})," here it will be a system function"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"func_id"})," what function are we calling"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"on_complete"})," next function to do after complete (can be either a node or a function)"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"optional-params",children:"optional params"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"none"})}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"2-example",children:"2. Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"mini_bot_start:\n  type: func\n  func_type: system\n  func_id: botStateSplit\n  params:\n    last_message: true\n    approve: age_question_min_bot\n    decline: irrelevant_user\n  on_complete: agent_handoff\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);