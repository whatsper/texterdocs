"use strict";(self.webpackChunktexter_docs=self.webpackChunktexter_docs||[]).push([[7650],{4135:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"Functions/Advanced/Split","title":"Split","description":"Use this for rounting nodes based on answer template message with buttons","source":"@site/docs/Functions/Advanced/Split.md","sourceDirName":"Functions/Advanced","slug":"/Functions/Advanced/Split","permalink":"/texterdocs/docs/Functions/Advanced/Split","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Functions/Advanced/Split.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Send Mail","permalink":"/texterdocs/docs/Functions/Advanced/Send Mail"},"next":{"title":"Notify","permalink":"/texterdocs/docs/Functions/Basic/Notify"}}');var i=t(4848),o=t(8453);const a={},r="Split",d={},c=[{value:"What does it do?",id:"what-does-it-do",level:3},{value:"1. Syntax",id:"1-syntax",level:2},{value:"required params",id:"required-params",level:3},{value:"optional params",id:"optional-params",level:3},{value:"2. Example",id:"2-example",level:2}];function l(e){const n={admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"split",children:"Split"})}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"Use this for rounting nodes based on answer template message with buttons"})}),"\n",(0,i.jsx)(n.h3,{id:"what-does-it-do",children:"What does it do?"}),"\n",(0,i.jsx)(n.p,{children:"Calls a node based on answer, mainly used for template messages,\nuser answered A then do this, user answered B then do that."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"1-syntax",children:"1. Syntax"}),"\n",(0,i.jsxs)(n.p,{children:["it can be either ",(0,i.jsx)(n.em,{children:"last_message: true"})," or ",(0,i.jsx)(n.em,{children:"node_name.text"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"<node_name>:\n  type: func\n  func_type: system\n  func_id: botStateSplit\n  params:\n    last_message: true\n    <ans_1>: <node_ans_1>\n    <ans_2>: <node_ans_2>\n  on_complete: <next_function>\n"})}),"\n",(0,i.jsx)(n.h3,{id:"required-params",children:"required params"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"type"})," type of the node"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"func_type"})," here it will be a system function"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"func_id"})," what function are we calling"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"on_complete"})," next function to do after complete (can be either a node or a function)"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"optional-params",children:"optional params"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"none"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"2-example",children:"2. Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"mini_bot_start:\n  type: func\n  func_type: system\n  func_id: botStateSplit\n  params:\n    last_message: true\n    approve: age_question_min_bot\n    decline: irrelevant_user\n  on_complete: agent_handoff\n"})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var s=t(6540);const i={},o=s.createContext(i);function a(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);