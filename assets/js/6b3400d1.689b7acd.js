"use strict";(self.webpackChunktexter_docs=self.webpackChunktexter_docs||[]).push([[79],{8453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>r});var t=s(6540);const l={},o=t.createContext(l);function d(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:d(e.components),t.createElement(o.Provider,{value:n},e.children)}},9726:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>d,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"YAML/Types/Func/Chat/Add Label","title":"Add Label","description":"What does it do?","source":"@site/docs/YAML/Types/Func/Chat/Add Label.md","sourceDirName":"YAML/Types/Func/Chat","slug":"/YAML/Types/Func/Chat/Add Label","permalink":"/texterdocs/docs/YAML/Types/Func/Chat/Add Label","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/YAML/Types/Func/Chat/Add Label.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Zoho","permalink":"/texterdocs/docs/YAML/Adapters/Zoho/"},"next":{"title":"Sensitive Session","permalink":"/texterdocs/docs/YAML/Types/Func/Chat/Sensitive Session"}}');var l=s(4848),o=s(8453);const d={},r="Add Label",a={},c=[{value:"What does it do?",id:"what-does-it-do",level:3},{value:"1. Syntax",id:"1-syntax",level:2},{value:"required params",id:"required-params",level:3},{value:"optional params",id:"optional-params",level:3},{value:"2. Example",id:"2-example",level:2}];function i(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"add-label",children:"Add Label"})}),"\n",(0,l.jsx)(n.h3,{id:"what-does-it-do",children:"What does it do?"}),"\n",(0,l.jsxs)(n.p,{children:["Allows you to either add/remove or set labels to chat\n",(0,l.jsx)(n.code,{children:"add"})," - adds a label to the current ones\n",(0,l.jsx)(n.code,{children:"remove"})," - removes a label from current labels (if theres one)\n",(0,l.jsx)(n.code,{children:"set"})," - sets labels instead of current ones (can be used to clear labels or set new ones)"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"1-syntax",children:"1. Syntax"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:'<node_name>:\n  type: func\n  func_type: chat\n  func_id: labels\n  params:\n    add:\n      - "<label id>"\n    remove:\n      - "<label id>"\n    set:\n      - "<label id>"\n  on_complete: <next function>\n'})}),"\n",(0,l.jsx)(n.h3,{id:"required-params",children:"required params"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"type"})," type of the node"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"func_type"})," here it will be a system function"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"func_id"})," what function are we calling"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"params"})," with subparams, can use only one, few or all of them","\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"each of the following expects label id"}),"\n"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"add"})," appends label(s) to current ones"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"remove"})," removes label(s) from current ones"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"set"})," sets new label(s)"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"on_complete"})," next function to do after complete (can be either a node or a function)"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"optional-params",children:"optional params"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"none"})}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"2-example",children:"2. Example"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:'the following will result in only 1 label: "only_one"'}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:'add_label:\n  type: func\n  func_type: chat\n  func_id: labels\n  params:\n    add: \n      - "important"\n      - "important2"\n    remove:\n     - "not_important"\n    set:\n    - "only_one"\n  on_complete: handoff\n'})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(i,{...e})}):i(e)}}}]);